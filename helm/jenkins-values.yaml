master.component:
#Master:
  Name: jenkins-master
  Image: "jenkins/jenkins"
  ImageTag: "2.162"
  ImagePullPolicy: "Always"
  Component: "jenkins-master"
  UseSecurity: true
  AdminUser: admin
  Cpu: "200m"
  Memory: "1Gi"
  ServicePort: 1111
  ServiceType: NodePort
  NodePort: 32000
  ServiceAnnotations: {}
  ContainerPort: 1111
  HealthProbes: true
  HealthProbesTimeout: 60
  SlaveListenerPort: 50000
  LoadBalancerSourceRanges:
    - 0.0.0.0/0
  InstallPlugins:
    - kubernetes:1.14.3
    - workflow-aggregator:2.5
    - workflow-job:2.31
    - credentials-binding:1.17
    - git:3.9.3
    - git-client:2.7.6
    - greenballs:1.15
    - ws-cleanup:0.37
  ScriptApproval:
    - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
    - "new groovy.json.JsonSlurperClassic"
    - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods leftShift java.util.Map java.util.Map"
    - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods split java.lang.String"
  CustomConfigMap: false
  NodeSelector: {}
  Tolerations: {}

agent:
  Enabled: true
  Image: jenkins/jnlp-slave
  ImageTag: 3.10-1
  Component: "jenkins-slave"
  Privileged: false
  Cpu: "200m"
  Memory: "512Mi"
  # You may want to change this to true while testing a new image
  AlwaysPullImage: false
  volumes:
    - type: HostPath
      hostPath: /var/run/docker.sock
      mountPath: /var/run/docker.sock
  NodeSelector: {}

persistence:
  Enabled: true
  StorageClass: jenkins-pv

  Annotations: {}
  AccessMode: ReadWriteOnce
  Size: 20Gi
  volumes:
  #  - name: nothing
  #    emptyDir: {}
  mounts:
  #  - mountPath: /var/nothing
  #    name: nothing
  #    readOnly: true

networkPolicy:
  Enabled: false
  ApiVersion: networking.k8s.io/v1

rbac:
  create: true
  apiVersion: v1beta1
#  roleRef: cluster-admin

serviceAccountName: default
